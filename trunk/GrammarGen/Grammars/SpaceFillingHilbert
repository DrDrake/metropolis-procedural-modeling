// Hilbert Curve
#define	fa1    0
#define fp1    1
#define fa2    0
#define fp2    0
#define fa3    0
#define fp3    0
#define fa4    0
#define fp4    0

#define xa1   90
#define xpx1   0  
#define xpy1   1
#define xpf1   1
#define xpy2   0  
#define xpx2   0  

#define xa2  270
#define xpx3   1  
#define xpy3   0  
#define xpf2   1
#define xpy4   0  
#define xpx4   1

#define xa3  270
#define xpx5   0  
#define xpy5   0  
#define xpf3   1
#define xpy6   1  
#define xpx6   0  

#define xa4   90
#define xpx7   0  
#define xpy7   0  
#define xpf4   0
#define xpy8   0  
#define xpx8   0  

#define xa5    0
  

#define ya1  270
#define ypx1   1  
#define ypy1   0
#define ypf1   1
#define ypy2   0  
#define ypx2   0  

#define ya2   90
#define ypx3   0  
#define ypy3   1  
#define ypf2   1
#define ypy4   1  
#define ypx4   0

#define ya3   90
#define ypx5   0  
#define ypy5   0  
#define ypf3   1
#define ypy6   0  
#define ypx6   1  

#define ya4  270
#define ypx7   0  
#define ypy7   0  
#define ypf4   0
#define ypy8   0  
#define ypx8   0  

#define ya5    0
  

#define aa   270
#define apx    1
#define apf    0
#define apy    0

Axiom : +(aa)X(apx)F(0)Y(0);

//F(p) <floor(p)> -> +(fa1)F(fp1)+(fa2)F(fp2)+(fa3)F(fp3)+(fa4)F(fp4);

X(p) <floor(p)> -> +(xa1)X(xpx1)Y(xpy1)F(xpf1)Y(xpy2)X(xpx2)+(xa2)X(xpx3)Y(xpy3)F(xpf2)Y(xpy4)X(xpx4)+(xa3)X(xpx5)Y(xpy5)F(xpf3)Y(xpy6)X(xpx6)+(xa4)X(xpx7)Y(xpy7)F(xpf4)Y(xpy8)X(xpx8)+(xa5);

X(p) <1-floor(p)> -> X(p);

Y(p) <floor(p)> -> +(ya1)X(ypx1)Y(ypy1)F(ypf1)Y(ypy2)X(ypx2)+(ya2)X(ypx3)Y(ypy3)F(ypf2)Y(ypy4)X(ypx4)+(ya3)X(ypx5)Y(ypy5)F(ypf3)Y(ypy6)X(ypx6)+(ya4)X(ypx7)Y(ypy7)F(ypf4)Y(ypy8)X(ypx8)+(ya5);

Y(p)<1-floor(p)> -> Y(p);
